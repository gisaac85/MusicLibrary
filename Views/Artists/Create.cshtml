@model MusicLibrary.Models.Artist

@{
	ViewData["Title"] = "Add Artist";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<h3 class="text-center">Add a new artist</h3>

<div class="row">
	<div class="col-md-2">
		<form asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="Name" class="control-label"></label>
				<input asp-for="Name" class="form-control" />
				<span asp-validation-for="Name" class="text-danger"></span>
			</div>
			<br />
			<div class="justify-content-between">
				<div>
					<input type="submit" value="Add" class="btn btn-md btn-success" />					
				</div>
				<br />
				<div>
					<a asp-action="Index" asp-controller="Songs" title="Back to main"> <i style="font-size:24px;color:blue;" class="bi bi-arrow-return-left"></i></a>
				</div>
			</div>
		</form>
	</div>
	<div style="float:right;margin-left:900px;margin-top:-100px;">
		<p>Added artists</p>
		<ol>
			@{
				foreach (var artist in (List<Artist>)ViewBag.Artists)
				{
					<li>
						@artist.Name &nbsp; <a asp-action="Delete" asp-controller="Artists" asp-route-id="@artist.Id" class="text-decoration-none" data-toggle="tooltip" title="Remove an artist">
							<i style="color:red;" class="bi bi-trash"></i>
						</a>
					</li>

						

				}
			}
		</ol>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
