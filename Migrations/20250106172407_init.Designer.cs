// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicLibrary.Data;

#nullable disable

namespace MusicLibrary.Migrations
{
    [DbContext(typeof(MusicLibraryDbContext))]
    [Migration("20250106172407_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicLibrary.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Queen"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Led Zeppelin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Eagles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "John Lennon"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Nirvana"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = 7,
                            Name = "BSB"
                        });
                });

            modelBuilder.Entity("MusicLibrary.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Grunge"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Metal"
                        });
                });

            modelBuilder.Entity("MusicLibrary.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            FileName = "C:\\Users\\HP\\source\\repos\\MusicLibrary\\wwwroot\\Uploads\\Queen-BohemianRhapsody.mp3",
                            GenreId = 1,
                            ReleaseDate = new DateOnly(1975, 10, 31),
                            Title = "Bohemian Rhapsody"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            FileName = "C:\\Users\\HP\\source\\repos\\MusicLibrary\\wwwroot\\Uploads\\Led-Zeppelin-Stairway-To-Heaven.mp3",
                            GenreId = 1,
                            ReleaseDate = new DateOnly(1971, 11, 8),
                            Title = "Stairway to Heaven"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 1,
                            FileName = "C:\\Users\\HP\\source\\repos\\MusicLibrary\\wwwroot\\Uploads\\Eagles-Hotel-California.mp3",
                            GenreId = 1,
                            ReleaseDate = new DateOnly(1977, 12, 8),
                            Title = "Hotel California"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            FileName = "C:\\Users\\HP\\source\\repos\\MusicLibrary\\wwwroot\\Uploads\\John-Lennon-Imagine.mp3",
                            GenreId = 1,
                            ReleaseDate = new DateOnly(1971, 10, 11),
                            Title = "Imagine"
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 6,
                            FileName = "C:\\Users\\HP\\source\\repos\\MusicLibrary\\wwwroot\\Uploads\\Metallica-Smells-Like-Teen-Spiri.mp3",
                            GenreId = 2,
                            ReleaseDate = new DateOnly(1991, 9, 10),
                            Title = "Smells Like Teen Spirit"
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 3,
                            FileName = "C:\\Users\\HP\\source\\repos\\MusicLibrary\\wwwroot\\Uploads\\Metallica-One.mp3",
                            GenreId = 3,
                            ReleaseDate = new DateOnly(1989, 8, 25),
                            Title = "One"
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 7,
                            FileName = "C:\\Users\\HP\\source\\repos\\MusicLibrary\\wwwroot\\Uploads\\Backstreet Boys - Everybody.mp3",
                            GenreId = 2,
                            ReleaseDate = new DateOnly(1999, 1, 10),
                            Title = "Everybody"
                        });
                });

            modelBuilder.Entity("MusicLibrary.Models.Song", b =>
                {
                    b.HasOne("MusicLibrary.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicLibrary.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
